@model IEnumerable<MovieRent.Models.Customer>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>
<p>
    @Html.ActionLink("New Customer", "New", "Customers", null, new { @class = "btn btn-success" })
</p>

<table id="customers" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Membership Type</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

@section scripts
{
    <script>

        $(document).ready(function () {
            $("#customers").DataTable({
                ajax: {
                    url: "/api/customers",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        render: function (data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },
                    {
                        data: "name"
                    },
                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn btn-danger btn-sm js-delete' data-customer-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            /**
             * The way were handling the click event of our buttons is a bit inefficient,
             * so if you have 20 or more customers on this page for each customer we are going to have a delete button and for each delete button you are going
             * to have a seperate handler function in the memory and you can imagine the more customers we have the more memory we are going to consume that we can change the selector to
             * only customers table and then provide a filter as the second argument of the on method js-delete $("#customers").on("click", ".js-delete", function(){})
             * that means no matter how many customer you have only one click handler for all delete buttons. Because in this example our handler is hooked to this selector and
             * obviously we have only one element on this page that matches the selector the table with the ID customers.
             */
            $("#customers").on("click", ".js-delete", function () {

                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                button.parent("tr").remove();
                            }
                        });
                    }
                });

            });
        });

    </script>
}